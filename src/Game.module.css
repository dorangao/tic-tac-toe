/* Game layout styles */
.game {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 20px;
}

/* Board styles - Using CSS Grid for scaling */
.board {
  display: grid;
  grid-template: repeat(3, 1fr) / repeat(3, 1fr);
  width: 100%;
  height: 100%;
  max-width: 600px;
  max-height: 600px;
  gap: 10px;
  background: #1f2530;
  padding: 15px;
  border-radius: 16px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.6), inset 0 -2px 8px rgba(255,255,255,0.05);
  margin: 20px 0;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Add a subtle celebration effect when game is won */
.winner .board {
  animation: celebrate 1s ease-in-out;
  box-shadow: 0 8px 20px rgba(76, 175, 80, 0.4), inset 0 -2px 8px rgba(255,255,255,0.1);
}

@keyframes celebrate {
  0% { transform: scale(1); }
  50% { transform: scale(1.03); }
  100% { transform: scale(1); }
}

/* Row styles - No longer needed with CSS Grid */
.boardRow {
  display: contents;
}

/* Square button styles */
.square {
  aspect-ratio: 1;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.05);
  border: 2px solid #61dafb;
  border-radius: 8px;
  font-size: 4rem;
  font-weight: bold;
  color: #fff;
  padding: 0;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.square:hover {
  background-color: rgba(97, 218, 251, 0.2);
  transform: scale(1.05);
  box-shadow: 0 0 8px rgba(0, 200, 255, 0.6);
  transition: box-shadow 150ms ease-in-out;
}

.square:focus {
  outline: none;
}

.square::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, rgba(97, 218, 251, 0.2) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.square:hover::before {
  opacity: 1;
}

/* X and O animations - Enhanced with micro-interactions */
.square[value="X"], .square[value="O"] {
  animation: pop-in 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
}

.square[value="X"] {
  color: #ff6b6b;
}

.square[value="X"]::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, rgba(255, 107, 107, 0.2) 0%, transparent 70%);
  border-radius: 8px;
  animation: pulse-x 2s infinite ease-in-out;
}

.square[value="O"] {
  color: #61dafb;
}

.square[value="O"]::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, rgba(97, 218, 251, 0.2) 0%, transparent 70%);
  border-radius: 8px;
  animation: pulse-o 2s infinite ease-in-out;
}

@keyframes pop-in {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  75% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulse-x {
  0% { opacity: 0.3; }
  50% { opacity: 0.7; }
  100% { opacity: 0.3; }
}

@keyframes pulse-o {
  0% { opacity: 0.3; }
  50% { opacity: 0.7; }
  100% { opacity: 0.3; }
}

/* Status message styles */
.status {
  margin-bottom: 10px;
  font-size: 1.2rem;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Responsive design for mobile */
@media (max-width: 768px) {
  .square {
    width: 60px;
    height: 60px;
    font-size: 28px;
    margin: 3px;
  }

  .board {
    padding: 10px;
  }
}

@media (max-width: 480px) {
  .square {
    width: 50px;
    height: 50px;
    font-size: 24px;
    margin: 2px;
  }
}
